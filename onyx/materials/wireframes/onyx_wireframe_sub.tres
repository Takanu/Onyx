[gd_resource type="VisualShader" load_steps=19 format=2]

[ext_resource path="res://addons/onyx/materials/uv_grids/textures/proportion/uv_grid_2.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeVectorOp" id=1]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=2]
operator = 1

[sub_resource type="VisualShaderNodeTexture" id=3]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=5]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=6]
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id=7]
output_port_for_preview = 0
constant = Color( 0.858824, 0.360784, 0.0627451, 0.219608 )

[sub_resource type="VisualShaderNodeColorConstant" id=8]
output_port_for_preview = 0
constant = Color( 0.858824, 0.360784, 0.0627451, 0.121569 )

[sub_resource type="VisualShaderNodeInput" id=9]
input_name = "fragcoord"

[sub_resource type="VisualShaderNodeColorConstant" id=10]
output_port_for_preview = 0
constant = Color( 0.6, 0.184314, 0.0392157, 0.152941 )

[sub_resource type="VisualShaderNodeScalarFunc" id=11]
function = 0

[sub_resource type="VisualShaderNodeVectorDecompose" id=12]

[sub_resource type="VisualShaderNodeScalarFunc" id=13]
function = 1

[sub_resource type="VisualShaderNodeScalarOp" id=14]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=15]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=16]
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=17]
constant = 1.0

[resource]
code = "shader_type spatial;
render_mode ensure_correct_normals, shadows_disabled;

uniform sampler2D tex_frg_13;


void vertex() {
// Output:0

}

void fragment() {
// Color:2
	vec3 n_out2p0;
	float n_out2p1;
	n_out2p0 = vec3(0.858824,0.360784,0.062745);
	n_out2p1 = 0.219608;

// Input:14
	vec3 n_out14p0;
	n_out14p0 = vec3(UV,0.0);

// Texture:13
	vec3 n_out13p0;
	float n_out13p1;
	vec4 tex_frg_13_read = texture( tex_frg_13 , n_out14p0.xy );
	n_out13p0 = tex_frg_13_read.rgb;
	n_out13p1 = tex_frg_13_read.a;

// VectorOp:15
	vec3 n_out15p0;
	n_out15p0 = n_out2p0 * n_out13p0;

// VectorOp:16
	vec3 n_out16p0;
	n_out16p0 = n_out2p0 * n_out13p0;

// Output:0
	ALBEDO = n_out15p0;
	ALPHA = n_out2p1;
	EMISSION = n_out16p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -218.64, 9.59199 )
flags/ensure_correct_normals = true
flags/shadows_disabled = true
nodes/vertex/0/position = Vector2( 560, 140 )
nodes/vertex/2/node = SubResource( 15 )
nodes/vertex/2/position = Vector2( -100, 120 )
nodes/vertex/3/node = SubResource( 16 )
nodes/vertex/3/position = Vector2( 60, 120 )
nodes/vertex/4/node = SubResource( 17 )
nodes/vertex/4/position = Vector2( -180, 360 )
nodes/vertex/connections = PoolIntArray( 2, 0, 3, 0, 4, 0, 3, 1 )
nodes/fragment/0/position = Vector2( 800, 80 )
nodes/fragment/2/node = SubResource( 7 )
nodes/fragment/2/position = Vector2( -20, 80 )
nodes/fragment/3/node = SubResource( 8 )
nodes/fragment/3/position = Vector2( -980, 320 )
nodes/fragment/4/node = SubResource( 9 )
nodes/fragment/4/position = Vector2( -1020, 940 )
nodes/fragment/5/node = SubResource( 10 )
nodes/fragment/5/position = Vector2( -1020, 540 )
nodes/fragment/6/node = SubResource( 11 )
nodes/fragment/6/position = Vector2( -1020, 800 )
nodes/fragment/7/node = SubResource( 12 )
nodes/fragment/7/position = Vector2( -840, 940 )
nodes/fragment/8/node = SubResource( 13 )
nodes/fragment/8/position = Vector2( -1020, 860 )
nodes/fragment/9/node = SubResource( 14 )
nodes/fragment/9/position = Vector2( -820, 800 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -580, 520 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -380, 300 )
nodes/fragment/13/node = SubResource( 3 )
nodes/fragment/13/position = Vector2( -100, 520 )
nodes/fragment/14/node = SubResource( 4 )
nodes/fragment/14/position = Vector2( -280, 640 )
nodes/fragment/15/node = SubResource( 5 )
nodes/fragment/15/position = Vector2( 240, 280 )
nodes/fragment/16/node = SubResource( 6 )
nodes/fragment/16/position = Vector2( 240, 440 )
nodes/fragment/connections = PoolIntArray( 2, 1, 0, 1, 4, 0, 7, 0, 7, 0, 6, 0, 6, 0, 9, 0, 8, 0, 9, 1, 5, 0, 10, 0, 9, 0, 10, 1, 3, 0, 11, 0, 10, 0, 11, 1, 7, 1, 8, 0, 14, 0, 13, 0, 15, 0, 0, 0, 2, 0, 15, 0, 13, 0, 15, 1, 16, 0, 0, 5, 2, 0, 16, 0, 13, 0, 16, 1 )
